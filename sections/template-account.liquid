<script src='{{ 'account.js' | asset_url }}' defer></script>
<script src='{{ 'dialogs.js' | asset_url }}' defer></script>
<script src='{{ 'country-selector.js' | asset_url }}' defer></script>

<div class='max-w-7xl p-5 container mx-auto'>
  <div class='flex items-end justify-between mb-5'>
    <h1 class='text-3xl'>My Account</h1>
    <nav class='flex'>
      <button type='button' class='btn-link text-sm link-orange' data-reset-password-for='{{ customer.email }}'>
        Reset Password
      </button>
      <a class='ml-3 pl-3 border-l text-sm text-zinc-500' href='{{ routes.account_logout_url }}'>Logout</a>
    </nav>
  </div>

  {% render 'toast', type: 'generic', style: 'success', visible: 'false', content: 'Instructions sent to your email.' %}

  <div class='flex flex-wrap md:flex-nowrap gap-5'>
    <div class='w-full md:w-2/3'>
      <div class='bg-white flex flex-col border rounded-lg shadow-lg p-2 md:p-5'>
        <h2 class='text-2xl mb-5'>Order History</h2>
        {% if customer.orders_count > 0 %}
          {% paginate customer.orders by 10 %}
            {% for order in customer.orders %}
              <div class='flex flex-col [&:not(:first-of-type)]:mt-10'>
                <div class='flex justify-between md:justify-normal gap-3 md:gap-6 bg-zinc-200 text-zinc-500 text-xs p-2 border border-zinc-200 rounded-t-lg'>
                  <div>
                    <p class='uppercase font-medium'>Date</p>
                    <p class='text-sm text-zinc-600'>{{ order.created_at | time_tag: format: 'date' }}</p>
                  </div>
                  <div>
                    <p class='uppercase font-medium'>Status</p>
                    {%- case order.fulfillment_status -%}
                      {% when 'fulfilled', 'complete' %}
                        {% assign colorClasses = 'bg-green-300 text-green-800' %}
                      {% when 'unfulfilled', 'partial' %}
                        {% assign colorClasses = 'bg-amber-400 text-amber-800' %}
                      {% else %}
                        {% assign colorClasses = 'bg-zinc-300 text-zinc-800' %}
                    {%- endcase -%}
                    <p class='text-[10px] uppercase font-medium rounded-lg {{ colorClasses }} pt-[6px] pb-1 px-2 tracking-wide leading-none'>
                      {{ order.fulfillment_status_label }}
                    </p>
                  </div>
                  <div class='text-right md:mr-0 md:ml-auto'>
                    <p class='uppercase text-sm text-black font-bold'>Order {{ order.name }}</p>
                    <p class='text-sm'>
                      <a href='{{ order.customer_url }}' class='link-orange'>Â» View Details</a>
                    </p>
                  </div>
                </div>

                <div class='p-3 border-x border-x-zinc-100 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 pb-4'>
                  <h3 class='col-span-full'>Item(s) purchased: {{ order.item_count }}</h3>
                  {% for item in order.line_items %}
                    <a
                      class='flex flex-col group text-sm leading-none items-center py-3 px-2 rounded-lg bg-zinc-100'
                      href='{{ item.product.url }}'
                    >
                      <div aria-hidden='true'>
                        {% if item.image %}
                          {{ item.image | image_url: width: 80 | image_tag: class: 'rounded-lg' }}
                        {% else %}
                          {{ 'product-1' | placeholder_svg_tag: 'w-full h-full' }}
                        {% endif %}
                      </div>
                      <div class='text-center pt-2'>
                        <p class='capitalize text-orange-500 group-hover:underline'>
                          {{ item.product.title | capitalize }}
                        </p>
                        <p class='capitalize text-zinc-500'>{{ item.variant.title | capitalize }}</p>
                      </div>
                    </a>
                  {% endfor %}
                </div>

                <div class='flex items-center justify-between gap-3 md:gap-6 text-zinc-600 bg-zinc-100 p-2 border border-zinc-200 rounded-b-lg'>
                  <div>
                    <span class='uppercase font-medium inline-block ml-1 text-xs'>Payment Status:</span>
                    <span class='text-sm'>{{ order.financial_status_label }}</span>
                  </div>
                  <div>
                    <span class='uppercase font-medium inline-block ml-1 text-xs'>Order Total:</span>
                    <span class='font-bold'>{{ order.total_net_amount | money }}</span>
                  </div>
                </div>
              </div>
            {% endfor %}
            {% render 'pagination', paginate: paginate %}
          {% endpaginate %}
        {% else %}
          <p class='mb-3'>You haven't placed any orders yet.</p>
          <a
            href='{{ routes.all_products_collection_url }}'
            class='px-4 py-2 rounded-lg inline-block mr-auto text-base font-medium shadow bg-orange-600 text-white hover:bg-orange-700'
          >
            Go Shopping
          </a>
        {% endif %}
      </div>
    </div>

    <div class='w-full md:w-1/3'>
      <div class='sticky top-5'>
        <div class='bg-white flex flex-col border rounded-lg shadow-lg p-5'>
          <div class='flex justify-between items-center'>
            <h2 class='text-2xl'>Address Book</h2>
            <button
              type='button'
              data-target-dialog='newAddress'
              class='btn-link link-orange text-sm uppercase font-bold'
            >
              Add New
            </button>
          </div>
          {%- if customer.addresses_count > 0 -%}
            {% for address in customer.addresses %}
              <div class='flex justify-between items-center mt-4 border-t pt-4'>
                <div class='text-zinc-700 leading-tight'>
                  {% if address == customer.default_address %}
                    <span class='text-[10px] uppercase font-medium rounded-lg text-green-800 bg-green-300 pt-[6px] pb-1 px-2 tracking-wide leading-none inline-block mb-1'>
                      Default
                    </span>
                  {% endif %}
                  {{ address | format_address }}
                </div>
                <div class='flex flex-col gap-5'>
                  <button
                    type='button'
                    class='text-orange-600'
                    title='Edit address'
                    data-target-dialog='edit-{{ address.id }}'
                  >
                    {% render 'icon-edit' %}
                  </button>
                  <button
                    type='button'
                    data-delete-address='{{ address.id }}'
                    class='text-zinc-600'
                    title='Delete Adress'
                  >
                    {% render 'icon-delete' %}
                  </button>
                </div>
              </div>
            {% endfor %}

          {% else %}
            <p>You don't have any address.</p>
            <a href='{{ routes.account_addresses_url }}' class='text-sm link-orange'>Add new Address</a>
          {%- endif -%}
        </div>

        <div class='flex mt-5 text-gray-500 text-sm md:text-base'>
          <span class='-mt-[1px] mr-1'>{% render 'icon-info' %}</span>
          <p>To change your account email, please <a class='link-orange' href='/pages/contact'>contact us</a>.</p>
        </div>
      </div>
    </div>
  </div>
</div>

{% comment %} Account Modals/Dialogs below. Ideally this should be a global component with the dialog html being generated via JS on the fly if possible {% endcomment %}

{% comment %} New Address Dialog {% endcomment %}
<dialog class='dialog-main max-lg:dialog-bottom lg:dialog-centered' data-dialog='newAddress' hidden>
  <div class='dialog-inner'>
    <button class='dialog-close-btn' data-dialog-close>
      {% render 'icon-close' %}
    </button>
    <div class='dialog-content'>
      {% render 'account-address-form', type: 'new' %}
    </div>
  </div>
</dialog>

{% comment %} Edit Addresses Dialogs {% endcomment %}
{% for address in customer.addresses %}
  <dialog class='dialog-main max-lg:dialog-bottom lg:dialog-centered' data-dialog='edit-{{ address.id }}' hidden>
    <div class='dialog-inner'>
      <button class='dialog-close-btn' data-dialog-close>
        {% render 'icon-close' %}
      </button>
      <div class='dialog-content'>
        {% render 'account-address-form', type: 'edit', address: address %}
      </div>
    </div>
  </dialog>
{% endfor %}

{% comment %} Delete Address Dialog. This is a good one to become totally created by JS. {% endcomment %}
<dialog class='dialog-main dialog-centered w-[400px]' data-dialog='deleteAddress' hidden>
  <div class='dialog-inner'>
    <button class='dialog-close-btn' data-dialog-close>
      {% render 'icon-close' %}
    </button>
    <div class='dialog-content'>
      <div class='flex flex-col'>
        <p>Are you sure you want to delete this address? This action cannot be undone.</p>
        <div data-delete-error class='hidden text-red-600'>
          <div class='flex gap-2'>
            {% render 'icon-error' %}
            <span>
              An error occurred. Please try again in a few minutes, or
              <a class='underline link-orange' href='{{ routes.shop_url }}/pages/contact'>contact us</a>.
            </span>
          </div>
        </div>
        <div class='flex gap-5'>
          <button type='button' data-confirm-delete class='mt-4 btn-primary'>Confirm</button>
          <button type='button' class='mt-4 btn-secondary' data-dialog-close>Cancel</button>
        </div>
      </div>
    </div>
  </div>
</dialog>
